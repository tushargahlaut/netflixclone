{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","console","log","movieTrailer","name","original_name","then","url","urlParams","URLSearchParams","URL","search","catch","error","handleClick","src","poster_path","backdrop_path","alt","id","style","padding","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","Math","floor","random","length","backgroundSize","backgroundImage","backgroundPosition","overview","substr","Navbar","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.812d4f5f.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL : \"https://api.themoviedb.org/3\"\r\n});\r\n\r\nexport default instance;","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"./axios\";\r\nimport \"./Row.css\";\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from 'movie-trailer';\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\"\r\n\r\nconst Row = ({title,fetchUrl,isLargeRow}) => {\r\n    const [movies,setMovies] = useState([]);  \r\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n    useEffect(  ()=> {\r\n        async function fetchData(){\r\n                const request = await axios.get(fetchUrl);\r\n                setMovies(request.data.results);\r\n                return request;\r\n        }\r\n        fetchData();\r\n    },[fetchUrl]);\r\n    const opts = {\r\n        height: \"390\",\r\n        width: \"99%\",\r\n        playerVars: {\r\n          autoplay: 0,\r\n        }\r\n      }\r\n    \r\n      const handleClick = (movie) => {\r\n        console.log(movie);\r\n        if (trailerUrl) {\r\n          setTrailerUrl('')\r\n        } else {\r\n          movieTrailer(movie?.name || movie?.original_name || movie?.title || \"\")\r\n            .then(url => {\r\n              const urlParams = new URLSearchParams(new URL(url).search)\r\n              setTrailerUrl(urlParams.get('v'));\r\n            }).catch((error) => console.log(error));\r\n        }\r\n      }\r\n\r\n    return ( \r\n    <div>\r\n            <h2>{title}</h2>\r\n            <div className=\"row__posters\">\r\n                    {\r\n                            movies.map(movie => (\r\n                                <img\r\n                                onClick={() => handleClick(movie)}\r\n                                 key={movie.id}\r\n                                 className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\r\n                                src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} alt={movie.name} />\r\n                            ))\r\n                    }\r\n            </div>\r\n            <div style={{ padding: \"40px\" }}>\r\n        {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n      </div>\r\n    </div>\r\n     );\r\n}\r\n \r\nexport default Row;","\r\nconst API_KEY = \"11a6bc0f7a8b1e6ffab338ddf9ae5033\";\r\n\r\nconst requests = {\r\n    \r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n\tfetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=123`,\r\n\tfetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n\tfetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n\tfetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n\tfetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n\tfetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n\tfetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`\r\n};\r\n\r\nexport default requests;\r\n// https://api.themoviedb.org/3/discover/tv?api_key=11a6bc0f7a8b1e6ffab338ddf9ae5033&with_network=123","\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport axios from \"./axios\";\r\nimport requests from \"./requests\";\r\nimport \"./banner.css\"\r\n\r\nconst Banner = () => {\r\n    const [movie,setMovie] = useState([]);\r\n    useEffect(()=>{\r\n        async function fetchData(){\r\n            const request = await axios.get(requests.fetchNetflixOriginals)\r\n            setMovie(request.data.results[\r\n                Math.floor(Math.random()*request.data.results.length-1)\r\n               \r\n            ]);\r\n        }\r\n        fetchData();\r\n        \r\n    },[]);\r\n\r\n    function truncate(str,n){\r\n        return str?.length>n ? str.substr(0,n-1) + \"...\" : str;\r\n    }\r\n\r\n    return ( \r\n       <header className=\"banner\"\r\n        style={{\r\n            backgroundSize:\"cover\",\r\n            backgroundImage : `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n            backgroundPosition:\"center center\"\r\n        }}\r\n       >\r\n           <div className=\"banner__contents\">\r\n               <h1 className=\"banner__title\">\r\n                   {movie?.title || movie?.name || movie?.original_name}\r\n               </h1>\r\n               <div className=\"banner__buttons\">\r\n                   <button className=\"banner__button\">Play</button>\r\n                   <button className=\"banner__button\">My List</button>\r\n               </div>\r\n               <h1 className=\"banner__description\">{truncate(movie?.overview,150)}</h1>\r\n           </div>\r\n           <div className=\"banner--fadebutton\"></div>\r\n       </header>\r\n     );\r\n}\r\n \r\nexport default Banner;","import { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport \"./Navbar.css\"\r\n\r\nconst Navbar = () => {\r\n    const [show,handleShow] = useState(false);\r\n    useEffect(()=>{\r\n        window.addEventListener(\"scroll\",()=>{\r\n            if(window.scrollY>100){\r\n                handleShow(true);\r\n            }\r\n            else\r\n                handleShow(false);\r\n        });\r\n        return () => {\r\n        window.removeEventListener(\"scroll\");\r\n        };\r\n    },[]);\r\n\r\n    return ( \r\n        <div className={`nav ${show && \"nav__black\"}`}>\r\n             <img\r\n            className=\"nav__logo\"\r\n             src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/250px-Netflix_2015_logo.svg.png\"\r\n             alt=\"Netflix Logo\"\r\n                />\r\n            <img\r\n            className=\"nav__avatar\"\r\n            src=\"https://mir-s3-cdn-cf.behance.net/project_modules/disp/366be133850498.56ba69ac36858.png\"\r\n            alt=\"Netflix Logo\"\r\n            />  \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Navbar;","import React from \"react\";\nimport Row from \"./Row\";\nimport requests from \"./requests\";\nimport \"./App.css\";\nimport Banner from \"./Banner\";\nimport Navbar from \"./Navbar\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar/>\n      <Banner/>\n      <Row title=\"NETFLIX ORIGINALS\" fetchUrl={requests.fetchNetflixOriginals} isLargeRow  />\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n\t\t\t<Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n\t\t\t<Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n\t\t\t<Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n\t\t\t<Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n\t\t\t<Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}